{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_CONTENT_CART':\n      {\n        const newItems = { ...state.items,\n          [action.payload.id]: !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id], action.payload]\n        };\n        const allContent = [].concat.apply([], Object.values(newItems));\n        const totalPrice = allContent.reduce((sum, obj) => obj.price + sum, 0);\n        return { ...state,\n          items: newItems,\n          totalCount: allContent.length,\n          totalPrice\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["C:/Users/Seth/Desktop/trening/shop/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","cart","state","action","type","newItems","payload","id","allContent","concat","apply","Object","values","reduce","sum","obj","price","length"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;;AAME,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvB,cAAMC,QAAQ,GAAG,EACf,GAAGH,KAAK,CAACJ,KADM;AAEf,WAACK,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqB,CAACL,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAD,GACjB,CAACJ,MAAM,CAACG,OAAR,CADiB,GAEjB,CAAC,GAAGJ,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAJ,EAAoCJ,MAAM,CAACG,OAA3C;AAJW,SAAjB;AAOA,cAAME,UAAU,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBC,MAAM,CAACC,MAAP,CAAcP,QAAd,CAApB,CAAnB;AACA,cAAMN,UAAU,GAAGS,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAA5C,EAAiD,CAAjD,CAAnB;AAEA,eAAO,EACL,GAAGZ,KADE;AAELJ,UAAAA,KAAK,EAAEO,QAFF;AAGLL,UAAAA,UAAU,EAAEQ,UAAU,CAACS,MAHlB;AAILlB,UAAAA;AAJK,SAAP;AAMD;;AAED;AACE,aAAOG,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,IAAf","sourcesContent":["const initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0,\r\n  };\r\n  \r\n  const cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_CONTENT_CART': {\r\n        const newItems = {\r\n          ...state.items,\r\n          [action.payload.id]: !state.items[action.payload.id]\r\n            ? [action.payload]\r\n            : [...state.items[action.payload.id], action.payload],\r\n        };\r\n  \r\n        const allContent = [].concat.apply([], Object.values(newItems));\r\n        const totalPrice = allContent.reduce((sum, obj) => obj.price + sum, 0);\r\n  \r\n        return {\r\n          ...state,\r\n          items: newItems,\r\n          totalCount: allContent.length,\r\n          totalPrice,\r\n        };\r\n      }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default cart;"]},"metadata":{},"sourceType":"module"}